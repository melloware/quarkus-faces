# must include web.xml and faces-config.xml to be parsed.
quarkus.native.resources.includes=META-INF/*.xml,*.properties

# default bean validation locale
quarkus.default-locale=en

# The list of all the supported MyFaces locales
quarkus.locales=ar,ca,cs,de,en,en_US,es,fr,it,ja,mt,nl,pl,pt,pt_BR,ru,sk,uk,zh_CN,zh_HK,zh_TW
quarkus.http.port=8081
quarkus.http.access-log.enabled=false
quarkus.http.enable-compression=true
quarkus.http.filter.others.header.Cache-Control=no-cache
quarkus.http.filter.others.matches=/.*
quarkus.http.filter.others.methods=GET,POST,PUT,DELETE
quarkus.http.filter.others.order=0
quarkus.servlet.direct-buffers=true
quarkus.live-reload.instrumentation=true

# Uses the dev services Keycloak and hard codes a port
quarkus.keycloak.devservices.port=51521

##### OIDC KEYCLOAK ######
# Default client id in the Docker image
quarkus.oidc.client-id=my-jsf-app
quarkus.oidc.application-type=web-app

# In Quarkus 3.3.2 this fixes issue with bad cookie name causing 401 if you cancel Keycloak login page
# https://github.com/quarkusio/quarkus/issues/35947
# According to the devs, in 3.4 this setting is the default
# so it won't be needed in here
quarkus.oidc.authentication.fail-on-missing-state-param=false

# Restore the original path after login redirect
quarkus.oidc.authentication.restore-path-after-redirect=true

# Sets up some time offserts to help prevent
# Token expiration during executions like Ajax, etc.
# Things might work fine without them
quarkus.oidc.token.refresh-token-time-skew=3M
quarkus.oidc.authentication.java-script-auto-redirect=false
quarkus.oidc.authentication.session-age-extension=15M
quarkus.oidc.token.lifespan-grace=120

# Need to split up the tokens because all 3 - ID, access, and refresh
# are too big for browser
quarkus.oidc.token-state-manager.split-tokens=true

#Automatically refresh expired tokens
quarkus.oidc.token.refresh-expired=true

# Calls Keycloaks logout process to logout the user
# This is a virtual link and doesn't exist in your code
# it just starts the logout process
# You just need to call it from your JSF
quarkus.oidc.logout.path=/secure/logout

# Where should we be redirected after logout
quarkus.oidc.logout.post-logout-path=/index.xhtml
###### OIDC END #####

# Turns off denying of REST endpoints because they
# aren't annotated with @PermitAll or @Authenticated
# This is useful if you have Rest endpoints in your web-app
quarkus.security.jaxrs.deny-unannotated-endpoints=false

# Setup authenticated path for anything under /secure
quarkus.http.auth.permission.authenticated.paths=/secure/*
quarkus.http.auth.permission.authenticated.policy=authenticated

