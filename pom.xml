<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://maven.apache.org/POM/4.0.0"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>com.melloware</groupId>
    <artifactId>quarkus-faces</artifactId>
    <version>14.0.3</version>
    <packaging>jar</packaging>
    <name>quarkus-faces</name>
    <description>Quarkus version of the PrimeFaces Showcase with many optimizations</description>
    <url>https://github.com/melloware/quarkus-faces</url>
    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <maven.compiler.release>17</maven.compiler.release>
        <omnifaces-quarkus.version>4.4.1</omnifaces-quarkus.version>
        <primefaces-quarkus.version>3.14.4</primefaces-quarkus.version>
        <myfaces.version>4.0.2</myfaces.version>
        <quarkus.version>3.13.0</quarkus.version>
    </properties>
    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>io.quarkus</groupId>
                <artifactId>quarkus-bom</artifactId>
                <version>${quarkus.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>
    <dependencies>
        <!-- Quarkus -->
        <dependency>
            <groupId>io.quarkus</groupId>
            <artifactId>quarkus-resteasy-jackson</artifactId>
        </dependency>
        <dependency>
            <groupId>io.quarkus</groupId>
            <artifactId>quarkus-hibernate-validator</artifactId>
        </dependency>
        <dependency>
            <groupId>io.quarkus</groupId>
            <artifactId>quarkus-cache</artifactId>
        </dependency>
        <dependency>
            <groupId>io.quarkus</groupId>
            <artifactId>quarkus-smallrye-health</artifactId>
        </dependency>
        <dependency>
            <groupId>io.quarkus</groupId>
            <artifactId>quarkus-awt</artifactId>
        </dependency>
        <!-- Logging -->
        <dependency>
            <groupId>org.jboss.slf4j</groupId>
            <artifactId>slf4j-jboss-logmanager</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-to-slf4j</artifactId>
            <version>2.23.1</version>
        </dependency>
        <!-- Faces -->
        <dependency>
            <groupId>org.apache.myfaces.core.extensions.quarkus</groupId>
            <artifactId>myfaces-quarkus</artifactId>
            <version>${myfaces.version}</version>
        </dependency>
        <dependency>
            <groupId>io.quarkiverse.primefaces</groupId>
            <artifactId>quarkus-primefaces</artifactId>
            <version>${primefaces-quarkus.version}</version>
        </dependency>
        <dependency>
            <groupId>io.quarkiverse.primefaces</groupId>
            <artifactId>quarkus-primefaces-extensions</artifactId>
            <version>${primefaces-quarkus.version}</version>
        </dependency>
        <dependency>
            <groupId>io.quarkiverse.omnifaces</groupId>
            <artifactId>quarkus-omnifaces</artifactId>
            <version>${omnifaces-quarkus.version}</version>
        </dependency>
        <!-- File Upload -->
        <dependency>
            <groupId>org.overviewproject</groupId>
            <artifactId>mime-types</artifactId>
            <version>2.0.0</version>
        </dependency>
        <!-- Barcode -->
        <dependency>
            <groupId>io.nayuki</groupId>
            <artifactId>qrcodegen</artifactId>
            <version>1.8.0</version>
        </dependency>
        <dependency>
            <groupId>org.primefaces.extensions</groupId>
            <artifactId>barcode4j-light</artifactId>
            <version>2.3.0</version>
        </dependency>
        <!-- ChartJS model -->
        <dependency>
            <groupId>software.xdev</groupId>
            <artifactId>chartjs-java-model</artifactId>
            <version>2.0.1</version>
        </dependency>
        <!-- HTML sanitizer for the textEditor -->
        <dependency>
            <groupId>com.googlecode.owasp-java-html-sanitizer</groupId>
            <artifactId>owasp-java-html-sanitizer</artifactId>
            <version>20240325.1</version>
        </dependency>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
            <version>3.15.0</version>
        </dependency>
        <!-- PrimeIcons View-->
        <dependency>
            <groupId>org.json</groupId>
            <artifactId>json</artifactId>
            <version>20240303</version>
        </dependency>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>1.18.34</version>
            <scope>provided</scope>
        </dependency>
    </dependencies>
    <repositories>
        <repository>
            <id>apache.snapshots</id>
            <name>Apache Development Snapshot Repository</name>
            <url>https://repository.apache.org/content/repositories/snapshots/</url>
            <releases>
                <enabled>false</enabled>
            </releases>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
        </repository>
    </repositories>
    <build>
        <finalName>${project.name}</finalName>
        <resources>
            <resource>
                <filtering>false</filtering>
                <directory>src/main/resources</directory>
            </resource>
            <resource>
                <filtering>true</filtering>
                <directory>src/main/resources</directory>
                <includes>
                    <include>**/*.properties</include>
                    <include>**/*.xml</include>
                </includes>
            </resource>
        </resources>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>exec-maven-plugin</artifactId>
                    <version>3.3.0</version>
                    <configuration>
                        <executable>docker</executable>
                        <workingDirectory>${project.basedir}</workingDirectory>
                        <arguments>
                            <argument>build</argument>
                            <argument>-f</argument>
                            <argument>src/main/docker/Dockerfile.jvm</argument>
                            <argument>-t</argument>
                            <argument>melloware/${project.artifactId}:latest</argument>
                            <argument>.</argument>
                        </arguments>
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.13.0</version>
                <configuration>
                    <encoding>${project.build.sourceEncoding}</encoding>
                    <annotationProcessorPaths>
                        <path>
                            <groupId>org.projectlombok</groupId>
                            <artifactId>lombok</artifactId>
                            <version>1.18.34</version>
                        </path>
                        <path>
                            <groupId>io.quarkus</groupId>
                            <artifactId>quarkus-extension-processor</artifactId>
                            <version>${quarkus.version}</version>
                        </path>
                    </annotationProcessorPaths>
                </configuration>
            </plugin>
            <plugin>
                <groupId>io.github.cleydyr</groupId>
                <artifactId>dart-sass-maven-plugin</artifactId>
                <version>1.3.1</version>
                <executions>
                    <execution>
                        <id>generate-css-using-sass</id>
                        <phase>generate-resources</phase>
                        <goals>
                            <goal>compile-sass</goal>
                        </goals>
                        <configuration>
                            <inputFolder>
                                ${project.basedir}/src/main/resources/META-INF/resources/resources/showcase/css
                            </inputFolder>
                            <outputFolder>
                                ${project.basedir}/src/main/resources/META-INF/resources/resources/showcase/css
                            </outputFolder>
                            <update>true</update>
                            <noSourceMap>true</noSourceMap>
                            <style>COMPRESSED</style>
                            <quiet>false</quiet>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <version>3.3.1</version>
                <executions>
                    <execution>
                        <id>copy-java-files</id>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <propertiesEncoding>UTF-8</propertiesEncoding>
                            <outputDirectory>${project.build.directory}/classes/META-INF/resources/java
                            </outputDirectory>
                            <resources>
                                <resource>
                                    <directory>src/main/java</directory>
                                    <filtering>false</filtering>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.primefaces.extensions</groupId>
                <artifactId>resources-optimizer-maven-plugin</artifactId>
                <version>2.6.4</version>
                <configuration>
                    <inputDir>${project.build.directory}/classes/META-INF/resources</inputDir>
                    <imagesDir>${project.build.directory}/classes/META-INF/resources</imagesDir>
                    <useDataUri>false</useDataUri>
                    <languageIn>ECMASCRIPT_2020</languageIn>
                    <languageOut>ECMASCRIPT_2020</languageOut>
                </configuration>
                <executions>
                    <execution>
                        <id>optimize</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>optimize</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>io.quarkus</groupId>
                <artifactId>quarkus-maven-plugin</artifactId>
                <version>${quarkus.version}</version>
                <extensions>true</extensions>
                <executions>
                    <execution>
                        <goals>
                            <goal>build</goal>
                            <goal>generate-code</goal>
                            <goal>generate-code-tests</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
        <extensions>
            <extension>
                <groupId>org.apache.maven.wagon</groupId>
                <artifactId>wagon-ssh</artifactId>
                <version>3.5.3</version>
            </extension>
        </extensions>
    </build>
    <profiles>
        <profile>
            <id>qdev</id>
            <build>
                <defaultGoal>compile quarkus:dev</defaultGoal>
            </build>
        </profile>
        <profile>
            <!-- Optionally activate this profile to compile the demo into JVM docker image! -->
            <id>docker</id>
            <activation>
                <property>
                    <name>docker</name>
                </property>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>exec-maven-plugin</artifactId>
                        <executions>
                            <!-- $ docker build -f src/main/docker/Dockerfile.jvm -t melloware/quarkus-faces:latest . -->
                            <execution>
                                <id>docker-build</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                                <configuration>
                                    <arguments>
                                        <argument>build</argument>
                                        <argument>-f</argument>
                                        <argument>src/main/docker/Dockerfile.jvm</argument>
                                        <argument>-t</argument>
                                        <argument>melloware/${project.artifactId}:latest</argument>
                                        <argument>.</argument>
                                    </arguments>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>native</id>
            <activation>
                <property>
                    <name>native</name>
                </property>
            </activation>
            <properties>
                <skipITs>true</skipITs>
                <quarkus.package.type>native</quarkus.package.type>
                <quarkus.native.container-build>true</quarkus.native.container-build>
                <quarkus.native.builder-image>mandrel</quarkus.native.builder-image>
                <quarkus.native.additional-build-args>
                    --enable-url-protocols=jar\,https,\
                    --initialize-at-run-time=org.apache.commons.lang3.RandomUtils
                </quarkus.native.additional-build-args>
            </properties>
            <build>
                <defaultGoal>clean package</defaultGoal>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>exec-maven-plugin</artifactId>
                        <executions>
                            <!-- $ docker build -f src/main/docker/Dockerfile.native -t melloware/quarkus-faces:version . -->
                            <execution>
                                <id>docker-build</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                                <configuration>
                                    <arguments>
                                        <argument>build</argument>
                                        <argument>-f</argument>
                                        <argument>src/main/docker/Dockerfile.native</argument>
                                        <argument>-t</argument>
                                        <argument>melloware/${project.artifactId}:${project.version}</argument>
                                        <argument>.</argument>
                                    </arguments>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
